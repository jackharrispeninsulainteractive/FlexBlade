name: PHP Tests
on:
  workflow_dispatch:
  pull_request:

jobs:
  test:
    runs-on: ubuntu-latest

    strategy:
      matrix:
        php-version: ['8.1', '8.2', '8.3', '8.4']
      fail-fast: false

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: ${{ matrix.php-version }}
          extensions: phar, dom, mbstring, fileinfo
          tools: composer:v2
          coverage: xdebug
          ini-values: phar.readonly=0

      - name: Get composer cache directory
        id: composer-cache
        run: echo "dir=$(composer config cache-files-dir)" >> $GITHUB_OUTPUT

      - name: Cache composer dependencies
        uses: actions/cache@v4
        with:
          path: ${{ steps.composer-cache.outputs.dir }}
          key: ${{ runner.os }}-composer-${{ hashFiles('**/composer.lock') }}
          restore-keys: ${{ runner.os }}-composer-

      - name: Install dependencies
        run: |
          composer install --prefer-dist --no-progress

      - name: Create temp directories
        run: |
          mkdir -p temp_install
          chmod -R 755 temp_install

      - name: Validate syntax
        run: |
          find src -name "*.php" -exec php -l {} \;

      - name: Run PHPUnit tests
        run: |
          php vendor/bin/phpunit --bootstrap dev_build.php --configuration phpunit.xml
        env:
          TEMP_INSTALL: ${{ github.workspace }}/temp_install

      - name: Upload test artifacts
        if: failure()
        uses: actions/upload-artifact@v4
        with:
          name: test-artifacts-php${{ matrix.php-version }}
          path: |
            temp_install/
          retention-days: 7

  code-quality:
    runs-on: ubuntu-latest
    needs: test

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: '8.4'
          extensions: phar, dom, mbstring
          tools: composer:v2

      - name: Install dependencies
        run: composer install --prefer-dist --no-progress

      - name: Run static analysis
        run: |
          find src -name "*.php" -exec php -l {} \; | grep -v "No syntax errors detected" || true
          echo "PHP syntax check completed"